directive @authorize on QUERY | MUTATION | SUBSCRIPTION | FIELD_DEFINITION
directive @role(role: Role!) on QUERY | MUTATION | SUBSCRIPTION | FIELD_DEFINITION

enum Role {
    Admin
    OrganisationAdmin
    OrganisationWorker
    BaseUser
}

type Mutation {
    createUser(input: NewUser!): User!
    login(email: String!, password: String!): Token!
    createOrganisation(input: NewOrganisation!): Organisation @role(role: OrganisationAdmin) @authorize
    assignUser(input: AssignUser): User! @role(role: OrganisationAdmin) @authorize
}


type User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    organisationId: String
    created_at: Int!
    updatedAt: Int
    disabled: Boolean
    role: Int
}

type Token {
    accessToken: String!
    refreshToken: String!
    expiredAt: Int!
}

type Query {
    user: [User]!
}

type Organisation {
    id: ID!
    name: String!
    description: String
    userPoolId: String!
    workerLimit: Int!
    userLimit: Int!
    disabled: Boolean
    created_at: Int!
    updated_at: Int,
}

type OrganisationUsers {
    organisationId: String
    userId : String
}

input NewUser{
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    organisationId: String,
    Role: Int!
}

input NewOrganisation {
    name: String!
    description: String
}

input AssignUser {
    userId: ID!
    role: Int!
}